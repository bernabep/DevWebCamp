{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","console","log","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","respuesta","arrayPonentes","ponente","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","tagsInput","tagsInputHidden","tagsDiv","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\nconst horas = document.querySelector('#horas');\r\nif(horas){\r\n\r\n    let busqueda = {\r\n        categoria_id: '',\r\n        dia: ''\r\n    }\r\n\r\n\r\n    const categoria = document.querySelector('#categoria');\r\n    const dias = document.querySelectorAll('[name=\"dia\"]');\r\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n    \r\n    categoria.addEventListener('change',terminoBusqueda)\r\n    \r\n    dias.forEach(dia=>dia.addEventListener('change',terminoBusqueda))\r\n    \r\n    function terminoBusqueda(e){\r\n        busqueda[e.target.name] = e.target.value;\r\n\r\n        //Reiniciar los campos ocultos y el selector de horas\r\n        inputHiddenHora.value = '';\r\n        inputHiddenDia.value = '';\r\n\r\n        const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n        if(horaPrevia){\r\n            horaPrevia.classList.remove('horas__hora--seleccionada');\r\n        }\r\n        \r\n        if(Object.values(busqueda).includes('')){\r\n            return\r\n        }\r\n\r\n        buscarEventos();\r\n    }\r\n\r\n    async function buscarEventos() {\r\n        const {dia,categoria_id} = busqueda;\r\n        const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`\r\n        const resultado = await fetch(url);\r\n        const eventos = await resultado.json();\r\n\r\n        obtenerHorasDisponibles(eventos);\r\n    }\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            //Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li')\r\n            listadoHoras.forEach(li=>li.classList.add('horas__hora--deshabilitada'))\r\n\r\n\r\n\r\n            //Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map(evento=>evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            console.log(listadoHorasArray)\r\n            const resultado = listadoHorasArray.filter(li=>!horasTomadas.includes(li.dataset.horaId))\r\n            resultado.forEach(li=>li.classList.remove('horas__hora--deshabilitada'))\r\n            console.log(resultado)\r\n\r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)')\r\n            horasDisponibles.forEach(hora=> hora.addEventListener('click',seleccionarHora))\r\n        }\r\n\r\n        function seleccionarHora(e){\r\n            //Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            //Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada')\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n        }\r\n    \r\n\r\n}\r\n\r\n})();","(function(){\r\nconst ponentesInput = document.querySelector('#ponentes')\r\nif(ponentesInput){\r\n    let ponentes = [];\r\n    let ponentesFiltrados = [];\r\n\r\n    obtenerPonentes();\r\n    ponentesInput.addEventListener('input',buscarPonentes )\r\n\r\n    async function obtenerPonentes() {\r\n        const url = `/api/ponentes`\r\n        const respuesta = await fetch(url);\r\n        const resultado = await respuesta.json();\r\n        formatearPonentes(resultado)\r\n        \r\n    }\r\n\r\n    function formatearPonentes(arrayPonentes = []){\r\n        ponentes = arrayPonentes.map(ponente=>{\r\n            return {\r\n                nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                id: ponente.id\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function buscarPonentes(e){\r\n        const busqueda = e.target.value\r\n\r\n        if(busqueda.length>3){\r\n            const expresion = new RegExp(busqueda,\"i\")\r\n            ponentesFiltrados = ponentes.filter(ponente=>{\r\n                if(ponente.nombre.toLowerCase().search(expresion)!= -1){\r\n                    return ponente\r\n                }\r\n            })\r\n            console.log(ponentesFiltrados);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n})();","(function(){\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n\r\n    if(tagsInput){\r\n        const tagsDiv = document.querySelector('#tags');\r\n        let tags= []\r\n\r\n        //Recupeaar del i nput oculto\r\n        if(tagsInputHidden.value !== ''){\r\n           tags = tagsInputHidden.value.split(',')\r\n           mostrarTags();\r\n        }\r\n\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress',guardarTag)\r\n\r\n        function guardarTag(e){\r\n            if(e.keyCode===44){\r\n                e.preventDefault()\r\n\r\n                if(e.target.value.trim()=='' || e.target.value.length<1){\r\n                    return;\r\n                }\r\n                tags = [...tags,e.target.value.trim()]\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n\r\n            }\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n            actualizarInputHidden()\r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n            tagsInputHidden.value = tags.toString();\r\n\r\n        }\r\n\r\n        function eliminarTag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag=> tag !== e.target.textContent)\r\n            actualizarInputHidden();\r\n        }\r\n\r\n    }\r\n\r\n})()\r\n\r\n\r\n\r\n\r\n"]}